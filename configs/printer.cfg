#Significant updates by brad3k 12Dec2024
#Original work from Formbot / Vivedino Troodon 2.0 , Firmware Version: 1.2, Compiled By: YGK3D Release Date: 02/09/23
## *** Consider CHANGE/CHECK the following: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section

[include mainsail.cfg]                  # Includes configuration for Mainsail web interface
[include KAMP_Settings.cfg]             # Includes Klipper Adaptive Meshing Purging settings
[include macros.cfg]                    # Includes additional macros for the Troodon 2.0 Pro
#[include s2dw.cfg]                     # Commented out Slicer to Disk Writer configuration when detached

[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f407xx_38001D001047333133343238-if00
restart_method: command
##--------------------------------------------------------------------

[printer]                               # Basic printer parameters
kinematics: corexy                      # Specifies CoreXY motion system
max_velocity: 300                       # Maximum velocity in mm/s
max_accel: 3000                         # Maximum acceleration in mm/s^2
max_z_velocity: 15                      # Maximum Z axis velocity
max_z_accel: 350                        # Maximum Z axis acceleration
square_corner_velocity: 5.0             # Speed for cornering moves

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]                            # X-axis stepper motor configuration
step_pin: PA3                          # Pin connected to stepper step signal
dir_pin: PA4                           # Pin connected to stepper direction signal
enable_pin: !PA1                       # Pin to enable/disable stepper (! means inverted logic)
rotation_distance: 40                  # Distance in mm per full rotation
microsteps: 32                         # Microsteps per full step
full_steps_per_rotation:200            # Number of full steps per motor rotation
endstop_pin: PF2                       # Pin for X endstop sensor
position_min: 0                        # Minimum X position
##--------------------------------------------------------------------

##  Uncomment for 350mm build
position_endstop: 350                  # Position of X endstop
position_max: 350                      # Maximum X position

##--------------------------------------------------------------------
homing_speed: 50                       # Speed for homing moves max 100
homing_retract_dist: 5                 # Distance to retract after homing
homing_positive_dir: true              # Homes in positive direction

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]                    # X stepper driver configuration (TMC2209)
uart_pin: PA2                          # UART pin for driver communication
interpolate: false                     # Disable microstepping interpolation
run_current: 1.2                       # Operating current for the stepper
sense_resistor: 0.110                  # Driver sense resistor value
stealthchop_threshold: 0               # Disable StealthChop mode

##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]                           # Defines the configuration section for the Y-axis stepper motor
step_pin: PC2                         # Specifies the microcontroller pin (PC2) that sends step pulses to the stepper driver
dir_pin: PC3                          # Defines the direction pin (PC3) that controls which direction the motor rotates
enable_pin: !PC1                      # Pin that enables/disables the stepper motor driver. The '!' indicates inverse logic - LOW enables the motor, HIGH disables it
rotation_distance: 40                 # For a standard GT2 belt with 20 teeth pulley: 2mm pitch × 20 teeth = 40mm
microsteps: 32                        # Number of microsteps per full step-Higher values (like 32) give smoother motion but reduce maximum speed
full_steps_per_rotation:200           # Set to 400 for 0.9 degree stepper 200 for 1.8° steppers (most common) 400 for 0.9° steppers (higher precision)
endstop_pin: PC15                     # Defines which pin reads the Y-axis endstop switch
position_min: 0                       # Sets the minimum valid position (in mm) for the Y axis. Typically 0, representing the position when the endstop is triggered
##--------------------------------------------------------------------

##  Uncomment for 350mm build
position_endstop: 355
position_max: 355

##--------------------------------------------------------------------
homing_speed: 50                       # Speed for homing moves max 100
homing_retract_dist: 5                 # Distance to retract after homing
homing_positive_dir: true              # Homes in positive direction

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PC0                          # Pin used for UART communication with the TMC2209 driver
interpolate: false                     # Disables 256 microstep interpolation, providing more accurate movement at lower microstep settings
run_current: 1.2                       # Sets the motor current to 1.2 amps during normal operation
sense_resistor: 0.110                  # The value of the current sense resistor on the driver board (in ohms)
stealthchop_threshold: 0               # Speed threshold for StealthChop mode - 0 disables StealthChop, forcing SpreadCycle mode for all speeds
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR_4
##  Endstop connected to DIAG_4
[stepper_z]
step_pin: PB10                        # Pin that sends step pulses to the Z stepper driver
dir_pin: PB11                         # Pin that controls the direction of Z motor rotation
enable_pin: !PE15                     # Pin to enable/disable the Z motor driver - '!' means inverted logic
rotation_distance: 40                 # Distance in mm traveled for one full rotation of the motor after gearing
gear_ratio: 80:16                     # Gear reduction ratio - In this case it's a 5:1 reduction (80:16 = 5:1 ratio)
microsteps: 32                        # Number of microsteps per full step - higher values give smoother motion
#endstop_pin: PF4
endstop_pin:probe:z_virtual_endstop   # Uses a virtual endstop generated by the Z probe instead of a physical endstop switch This means the printer uses the probe for Z homing and bed leveling
                                      # The Z height is determined by the probe triggering, not a physical switch Required for automatic bed leveling/mesh systems

##--------------------------------------------------------------------

##  Uncomment below for 350mm build
position_max: 310             # Sets the maximum travel distance (in mm) for this axis, matching Troodon 2.0 Pro's build volume
position_min: -5              # Allows slight negative movement (in mm) for proper homing and bed leveling
homing_speed: 8               # Sets the initial homing speed (in mm/s) - moderate speed to prevent crashes
second_homing_speed: 3        # Slower final approach speed (in mm/s) during homing for accuracy
homing_retract_dist: 3        # Distance (in mm) to retract after hitting endstop for precise home position

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]            # Configuration block for TMC2209 stepper driver controlling Z axis
uart_pin: PE14                 # Specifies the UART pin used to communicate with the TMC2209 driver
interpolate: false             # Disables microstepping interpolation which can improve accuracy at lower speeds
run_current: 0.8               # Sets the operating current to 0.8 amps for the stepper motor during normal operation
sense_resistor: 0.110          # Defines the current sense resistor value in ohms used in the TMC2209 driver
stealthchop_threshold: 0       # Disables StealthChop mode by setting threshold to 0, running in SpreadCycle mode for better accuracy

##  Z1 Stepper - Rear Left
##  Connected to MOTOR_3
[stepper_z1]                    # Configuration block for the second Z-axis stepper motor (dual Z configuration)
step_pin: PE11                  # GPIO pin that sends step pulses to the stepper driver
dir_pin: !PE12                  # GPIO pin that controls motor direction (! indicates signal inversion)
enable_pin: !PE10               # GPIO pin that enables/disables the stepper driver (! indicates signal inversion)
rotation_distance: 40           # Distance in mm that the axis travels per one full rotation of the motor
gear_ratio: 80:16               # Gear reduction ratio between the motor and leadscrew (80 teeth to 16 teeth)
microsteps: 32                  # Number of microsteps per full step, higher values give smoother motion

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]            # Configuration block for TMC2209 stepper driver controlling second Z motor
uart_pin: PE9                   # UART communication pin for this specific TMC2209 driver
interpolate: false              # Disables microstepping interpolation for better accuracy at lower speeds
run_current: 0.8                # Sets motor current to 0.8 amps during normal operation, matching Z0 settings
sense_resistor: 0.110           # Current sense resistor value in ohms, must match actual hardware value
stealthchop_threshold: 0        # Disables StealthChop quiet mode, using SpreadCycle for better accuracy

##  Z2 Stepper - Rear Right
##  Connected to MOTOR_6
[stepper_z2]                    # Configuration block for the third Z-axis stepper motor (triple Z configuration)
step_pin: PE7                   # GPIO pin that sends step pulses to the stepper driver
dir_pin: PE8                    # GPIO pin that controls motor direction (note: no inversion here)
enable_pin: !PG1                # GPIO pin that enables/disables the stepper driver (! indicates signal inversion)
rotation_distance: 40           # Distance in mm that the axis travels per one full rotation of the motor
gear_ratio: 80:16               # Gear reduction ratio between the motor and leadscrew (80 teeth to 16 teeth)
microsteps: 32                  # Number of microsteps per full step, matching other Z stepper settings

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]            # Configuration block for TMC2209 driver controlling third Z motor
uart_pin: PG0                   # UART communication pin for this specific TMC2209 driver
interpolate: false              # Disables microstepping interpolation like other Z steppers
run_current: 0.8                # Sets motor current to 0.8 amps, matching other Z stepper settings
sense_resistor: 0.110           # Current sense resistor value in ohms, must match hardware
stealthchop_threshold: 0        # Disables StealthChop mode for consistent operation with other Z steppers

##  Z3 Stepper - Front Right
##  Connected to MOTOR_5
[stepper_z3]                    # Configuration block for the fourth Z-axis stepper motor (quad Z configuration)
step_pin: PF13                  # GPIO pin that sends step pulses to this stepper driver
dir_pin: !PF14                  # GPIO pin that controls motor direction (! indicates signal inversion)
enable_pin: !PF12               # GPIO pin that enables/disables the stepper driver (! indicates signal inversion)
rotation_distance: 40           # Distance in mm that the axis travels per one full rotation of the motor
gear_ratio: 80:16               # Gear reduction ratio between the motor and leadscrew (80:16)
microsteps: 32                  # Number of microsteps per full step, matching other Z stepper settings

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]            # Configuration block for TMC2209 driver controlling fourth Z motor
uart_pin: PF11                  # UART communication pin for this specific TMC2209 driver
interpolate: false              # Disables microstepping interpolation consistent with other Z steppers
run_current: 0.8                # Sets motor current to 0.8 amps, matching other Z stepper settings
sense_resistor: 0.110           # Current sense resistor value in ohms, identical to other drivers
stealthchop_threshold: 0        # Disables StealthChop mode for consistent operation across all Z motors


#####################################################################
#   Extruder
#####################################################################

##  Connected to MOTOR_2
##  Heater - HE0
##  Thermistor - T0
[extruder]                             # Extruder configuration
step_pin: PB0                          # Extruder stepper step pin
dir_pin: PB1                           # Extruder stepper direction pin
enable_pin: !PC5                       # Extruder stepper enable pin ! reverses direction
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 22.6789511         #Bondtech 5mm Drive Gears. Calibrated steps per mm for extrusion
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:10 for Stealthburner/Clockwork 2
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
gear_ratio: 50:10                      #BMG Gear Ratio
microsteps: 32                         # Microsteps for extruder stepper
full_steps_per_rotation: 200           #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400                 # Diameter of the nozzle
filament_diameter: 1.75                # Diameter of the filament
heater_pin: PB9                        # Pin for heater control
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
#when using the Rapido hotend, use the following
#sensor_type: Generic 3950
sensor_type: PT1000                    # Temperature sensor type
sensor_pin: PF3                        # Temperature sensor pin
min_temp: 0                            # Minimum temperature allowed before triggering error - safety feature to detect thermistor failures
max_temp: 375                          # Set to 375 even though it can run hotter
max_power: 1.0                         # Maximum heater power
min_extrude_temp: 170                  # Minimum temperature for extrusion
max_extrude_only_distance: 150         # Maximum length for load/unload moves

#if using Rapido CLone, use the following

#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
##  Try to keep pressure_advance below 1.0
#pressure_advance: 0.05
##  Default is 0.040, leave stock
#pressure_advance_smooth_time: 0.040

##  E0 on MOTOR_2
##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]        # Configuration block for TMC2209 driver controlling the extruder motor
uart_pin: PC4             # UART communication pin used to control this specific TMC2209 driver
interpolate: false        # Disables microstepping interpolation for more precise filament control
run_current: 0.7          # Sets motor current to 0.7 amps - balanced for reliable extrusion without excess heat
sense_resistor: 0.110     # Current sense resistor value in ohms used in the TMC2209 driver
stealthchop_threshold: 0  # Disables StealthChop mode, using SpreadCycle for better extruder accuracy


#####################################################################
#   Bed Heater
#####################################################################

##  SSR Pin - HE1
##  Thermistor - TB
[heater_bed]
##  Uncomment the following line if using the default SSR wiring from the docs site
#heater_pin: PA3
##  Other wiring guides may use BED_OUT to control the SSR. Uncomment the following line for those cases
heater_pin: PD12
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: Generic 3950
sensor_pin: PA0
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 0.6            # Limits bed heater to 60% of full power to prevent warping/damage over time
min_temp: 0               # Minimum allowable temperature - triggers error if bed reads below this (thermistor check)
max_temp: 120             # Maximum allowable temperature for the bed - safety cutoff to prevent overheating
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#added by bwn pwm_cycle_time: 0.01666 to stop flickering of lights from heater bed
pwm_cycle_time: 0.01666 # 60Hz is 0.01666

#####################################################################
#   Probe Settings with 0.1mm Safety Margin
#####################################################################

[probe]
pin: PF4                               # The input pin connected to the probe's trigger signal
x_offset: 0                            # X distance between probe and nozzle (0 means probe is aligned with nozzle in X)
y_offset: 0                            # Y distance between probe and nozzle (0 means probe is aligned with nozzle in Y)
speed: 10.0                            # Speed (in mm/s) of probe moves during probing
samples: 4                             # Number of times to probe each point
samples_result: median                 # Use the median of the probe samples rather than the average
sample_retract_dist: 3.0               # How far (in mm) to lift the probe between samples
samples_tolerance: 0.075               # Maximum deviation allowed between samples (in mm)
samples_tolerance_retries: 3           # Number of times to retry if samples exceed tolerance

#[safe_z_home]
#home_xy_position:170,170
#speed:100
#z_hop:1

activate_gcode:                                             # G-code to run before using the probe
    {% set PROBE_TEMP = 170 %}                              # Set desired probe temperature to 170°C
    {% set MAX_TEMP = PROBE_TEMP + 5 %}                     # Maximum allowable temperature is 5°C above PROBE_TEMP
    {% set ACTUAL_TEMP = printer.extruder.temperature %}    # Get current extruder temperature
    {% set TARGET_TEMP = printer.extruder.target %}         # Get current target temperature

    {% if TARGET_TEMP > PROBE_TEMP %}                       # If target temperature is higher than probe temperature
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
                                                            # Inform user that temperature will be lowered
        M109 S{ PROBE_TEMP }                                # Wait for extruder to cool to PROBE_TEMP
    {% else %}
                                                            # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}                     # If current temperature is above maximum allowed
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
                                                            # Inform user we're waiting for cooling
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }  # Wait until temperature drops below MAX_TEMP
        {% endif %}
    {% endif %}
	
#####################################################################
#   Fan Control
#####################################################################

##  Print Cooling Fan - FAN0
[fan]
pin: PB7                # GPIO pin controlling the fan
kick_start_time: 0.5    # Time in seconds at full power to ensure fan starts spinning reliably
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
off_below: 0.10


##  Hotend Fan - FAN1
[heater_fan hotend_fan]         # Configuration for the hotend cooling fan (not the part cooling fan)
pin: PB8                        # GPIO pin controlling this fan
max_power: 1.0                  # Allows fan to run at full power when needed for maximum cooling
kick_start_time: 0.5            # Time in seconds at full power to ensure reliable fan startup
heater: extruder                # Links this fan to the extruder temperature
heater_temp: 50.0               # Fan turns on when extruder temperature exceeds 50°C
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

##  Controller fan - FAN2
[controller_fan controller_fan]   # Configuration for fan that cools the controller board/stepper drivers
pin: PC6                          # GPIO pin controlling this fan
kick_start_time: 0.5              # Time in seconds at full power to ensure reliable fan startup
heater: heater_bed                # Fan activates when bed heater is on to ensure cooling during high-power operations

##  Exhaust fan - FAN3
[heater_fan Chamber_fan]              # Configuration section for the chamber cooling fan
pin: PE5                              # The PWM pin controlling the chamber fan
max_power: 0.8                        # Maximum power setting (80% of full power) to protect the fan
shutdown_speed: 0.0                   # Fan speed when printer is shutdown (0 = completely off)
kick_start_time: 1.0                  # Run at full power for 1 second when starting to ensure fan spins up
heater: heater_bed                    # Fan responds to bed temperature
heater_temp: 50                       # Temperature threshold (in °C) when fan will turn on
fan_speed: 0.8                        # Normal running speed (80% of max_power, so effectively 64% of full power)

#####################################################################
#   LED Control
#####################################################################

## Chamber Lighting - HE2 Connector (Optional)

[output_pin case_light]             # Define an output pin configuration block for controlling a case light
pin: PE6                            # Specify the physical GPIO pin (PE6) that the case light is connected to
pwm:false                           # Disable PWM (Pulse Width Modulation) since this is a simple on/off light
shutdown_value: 0                   # Set the pin to low (0) if the printer crashes or shuts down unexpectedly
value:1                             # Set the initial state of the light to on (1) when Klipper starts

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800                       # Set idle timeout to 1800 seconds (30 minutes)

[safe_z_home]
home_xy_position: 175,175           # Center of the 350x350mm build plate
z_hop: 10                           # Lift Z by 10mm before moving to center
z_hop_speed: 10                     # Speed for the Z hop movement in mm/s
speed: 100                          # Speed for X/Y movement to center in mm/s
move_to_previous: False             # Don't return to previous position after homing


##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  to respective belt positions
[quad_gantry_level]

#--------------------------------------------------------------------
##  Gantry Corners for 350mm Build
##  Uncomment for 350mm build
gantry_corners:             # Defines the probing area boundaries for QGL (Quad Gantry Leveling)
  -60,-10                   # Front left coordinate, allows probing slightly outside print area
  410,420                   # Back right coordinate, ensures full bed coverage for leveling
#  Probe points
points:
  9,8                     # Front left probing point, inset from edge for stability
  9,342                   # Back left probing point, near max Y
  345,342                 # Back right probing point, near max X and Y
  345,8                   # Front right probing point, near max X

#--------------------------------------------------------------------
speed: 100                 # Speed of movement during QGL probing in mm/s
horizontal_move_z: 5       # Height of nozzle above bed when moving between probe points
retries: 6                 # Number of retry attempts if leveling points aren't within tolerance
retry_tolerance: 0.008     # Maximum allowed deviation in mm between probe points (8 microns)
max_adjust: 10             # Maximum allowed adjustment in mm for any Z stepper during leveling

#####################################################################
# Bed Mesh
#####################################################################

[bed_mesh]
speed: 150                    # Fast enough for efficiency but not so fast it affects accuracy
horizontal_move_z: 5          # Safe clearance height between probing points
mesh_min: 15, 15              # Slight inset from edge for reliability
mesh_max: 335, 335            # Slight inset from edge for reliability
probe_count: 9, 9             # 9x9 grid = 81 points for detailed coverage
mesh_pps: 4, 4                # Points per segment for interpolation between probed points
algorithm: bicubic            # Better interpolation for smoother transitions
bicubic_tension: 0.2          # Balanced tension for the bicubic interpolation
move_check_distance: 3        # Check mesh more frequently during moves
split_delta_z: .01            # Smaller value for more precise mesh application
fade_start: 1                 # Start fading out mesh compensation at 1mm height
fade_end: 10                  # Complete mesh fade out by 10mm height
fade_target: 0                # Target Z adjustment after fade



[pause_resume]             # Enables pause/resume functionality during printing
recover_velocity: 50.      # Speed (in mm/s) at which the printer returns to its position after resume
                           # When capture/restore is enabled, the speed at which to return to
                           # the captured position (in mm/s). Default is 50.0 mm/s.

[respond]                  # Enables responses/feedback from the printer to host/user
default_type: echo         # Sets default response type to 'echo' for M118 commands and feedback
#   Sets the default prefix of the "M118" and "RESPOND" output to one
#   of the following:
#       echo: "echo: " (This is the default)
#       command: "// "
#       error: "!! "
#default_prefix: echo:
#   Directly sets the default prefix. If present, this value will
#   override the "default_type".

#####################################################################
#   Filament Runout Sensor
#####################################################################

[filament_switch_sensor filament_sensor]
pause_on_runout: True
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
runout_gcode:
  M600
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
#insert_gcode:
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
#event_delay: 3.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.
switch_pin: PC14
#   The pin on which the switch is connected. This parameter must be
#   provided

#####################################################################
#   Macros
#####################################################################

#BWN Changed out the G32 macro
[gcode_macro G32]
 gcode:
    # Add description of what macro does
    {% set current_extruder_temp = printer.extruder.target %}
    SAVE_GCODE_STATE NAME=STATE_G32
    
    # Add error checking
    {% if "xyz" not in printer.toolhead.homed_axes %}
        { action_raise_error("Must home first!") }
    {% endif %}
    
    # Add status updates
    M117 Starting G32 bed leveling
    G90
    G28
    
    # Add safety check for temperatures
    {% if printer.extruder.temperature < 150 %}
        _SET_TEMPS EXTRUDER_TEMP=170 WAIT=1
    {% endif %}
    
    M117 Cleaning nozzle
    NOZZLE_CLEAN
    
    M117 Leveling gantry
    QUAD_GANTRY_LEVEL
    
    M117 Final nozzle clean
    NOZZLE_CLEAN
    
    M117 Re-homing
    G28
    
    # More robust temperature handling
    {% if current_extruder_temp > 0 %}
        M117 Restoring temperature
        _SET_TEMPS EXTRUDER_TEMP={current_extruder_temp} WAIT=0
    {% endif %}
    
    M117 Moving to center
    G0 X175 Y175 Z5 F3600
    
    RESTORE_GCODE_STATE NAME=STATE_G32
    M117 G32 Complete

#####################################################################
# Mesh Bed Leveling
#####################################################################

[gcode_macro mesh_leveling]
gcode:
      G28 # Home All
      #T0
      BED_MESH_CALIBRATE PROFILE=mesh1 METHOD=automatic # Start probing

[gcode_macro save_mesh]
gcode:
      BED_MESH_PROFILE SAVE=mesh1
      SAVE_CONFIG
#####################################################################
# Exclude Object
#####################################################################
[exclude_object]

#####################################################################
# Arc Support - Enables G2/G3 commands for curved movements
#####################################################################
[gcode_arcs]
resolution: 1.0              # Maximum mm of each segment when breaking arc into segments
#   A segment is the straight distance between the break points
#   Lower value = smoother arcs but more processing
#   Higher value = rougher arcs but less processing
#   Range: 0.1-1.0 recommended for most prints

#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice

#####################################################################
# Print Start
#####################################################################
   
[gcode_macro PRINT_START]
gcode:
    {% set BED_TEMP = params.BED_TEMP %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP %}
    
    M140 S{BED_TEMP}                                     ; start heating bed
    G28                                                  ; home all axes
    G90                                                  ; absolute positioning
    M190 S{BED_TEMP}                                     ; wait for bed temp
    
    G32                                                  ; level gantry
    NOZZLE_CLEAN                                         ; clean nozzle before QGL
    QUAD_GANTRY_LEVEL                                    ; quad gantry level
    NOZZLE_CLEAN                                         ; clean nozzle after QGL
    G28                                                  ; home after QGL
    
    M104 S{EXTRUDER_TEMP}                                ; start heating extruder
    bed_mesh_calibrate                                   ; KAMP bed mesh
    M109 S{EXTRUDER_TEMP}                                ; wait for extruder temp
    
    G1 Z20 F3000                                         ; move nozzle away from bed
    NOZZLE_PRIME                                         ; prime the nozzle
    
    G92 E0                                               ; reset extruder
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice

#####################################################################
# Print End
#####################################################################
[gcode_macro PRINT_END]
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

#####################################################################
# Set Temperatures Master Macro
#####################################################################
#BWN the Set Temps and M600 macros are completely rewritten
[gcode_macro _SET_TEMPS]
gcode:
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(0)|float %}
    {% set BED_TEMP = params.BED_TEMP|default(0)|float %}
    {% set WAIT = params.WAIT|default(1)|int %}
    
    {% if BED_TEMP > 0 %}
        M140 S{BED_TEMP}
        {% if WAIT == 1 %}
            M190 S{BED_TEMP}
        {% endif %}
    {% endif %}
    
    {% if EXTRUDER_TEMP > 0 %}
        M104 S{EXTRUDER_TEMP}
        {% if WAIT == 1 %}
            M109 S{EXTRUDER_TEMP}
        {% endif %}
    {% endif %}

#####################################################################
# M600 Color Change
#####################################################################
[gcode_macro M600]
description: Filament change
variable_park_x: 175    # X parking coordinate
variable_park_y: 345    # Y parking coordinate
variable_z_lift: 10     # Z lift amount
gcode:
    {% set X = params.X|default(park_x)|float %}
    {% set Y = params.Y|default(park_y)|float %}
    {% set Z = params.Z|default(z_lift)|float %}
    {% set stored_temp = printer.extruder.target %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE             # Pause the print and record position
    # Lift Z
    G91                     # Relative positioning
    G1 Z{Z} F900           # Move up by Z amount
    
    # Move to park position
    G90                     # Absolute positioning
    G1 X{X} Y{Y} F6000     # Move to park position
    
    # Unload filament
    G91                     # Relative positioning
    G1 E-1 F2700           # Initial retract to prevent oozing
    G1 E-100 F1000         # Unload filament completely
    
    # Ensure temperature is maintained
    _SET_TEMPS EXTRUDER_TEMP={stored_temp} WAIT=0
    
    # Display message and wait for user
    M117 Please load new filament and press RESUME
    RESPOND MSG="Please load new filament and press RESUME"
    
    # Set variables for RESUME to handle filament loading
    RESTORE_GCODE_STATE NAME=M600_state MOVE=0
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=load_filament VALUE=1

[gcode_macro RESUME]
rename_existing = RESUME_BASE
description = Resume the actual running print
variable_load_filament = 0
gcode:
    {% if load_filament == 1 %}
        M117 Loading filament...
        M83                      ; Relative extrusion
        G1 E100 F1000           ; Load filament
        G1 E40 F200             ; Prime filament
        G1 E-1 F1800            ; Small retract
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=load_filament VALUE=0
    {% endif %}
    RESUME_BASE

#####################################################################
# FILAMENT MANAGEMENT
#####################################################################
[gcode_macro UNLOAD_FILAMENT]
description: Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode:
    SAVE_GCODE_STATE NAME=unload_state
    
    # Switch to relative positioning
    G91
    
    # Set absolute extrusion mode for consistent unloading
    M82
    
    {% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
        M117 Heating...
        # Heat up hotend and wait for temperature
        M109 S{params.TEMP|default(220, true)}
    {% endif %}
    
    M117 Unloading filament...
        # Purge a little to create a clean tip
    G0 E5 F300
        # Quick retract to break the filament string
    G0 E-5 F3600
        # Wait for the filament to cool slightly
    G4 P3000
        # Push forward slightly to form a bulb/tip
    G0 E5 F3600
        # Initial fast retract to get past the heat break
    G0 E-20 F3600
        # Slower retract for the rest of the way
    G0 E-130 F1800
        # Return to relative extrusion mode
    M83
        M117 Filament unloaded!
    RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
    RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description: Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode:
  SAVE_GCODE_STATE NAME=load_state
  G91
  # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
  {% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
    M117 Heating...
    M109 S{params.TEMP|default(220, true)}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
  {% endif %}
# Add after heating: filament sensor check
      {% if printer.filament_switch_sensor %}
        QUERY_FILAMENT_SENSOR SENSOR=filament_sensor
    {% endif %}

  M117 Loading filament...
    # Reduce initial load speed for safer insertion
    G0 E50 F300                  # Slower initial load
    G4 P1000                     # Pause for 1 second
    G0 E40 F150                  # Slower second stage
    G0 E10 F100                  # Final purge
   
  M400                          # Wait for all moves to complete
  M83                           # Return to relative extrusion mode
  M117 Filament loaded!
  RESPOND MSG="Filament loaded!"
  RESTORE_GCODE_STATE NAME=load_state

#####################################################################  
# Nozzle Cleaning
#####################################################################
[gcode_macro NOZZLE_CLEAN]
description: wipes nozzle on brush to clean it
gcode:
  G90
  G1 X265 Y355 F6000
  G1 Z0.5 F3000
  G1 X305 Y355 F10000
  G1 X265 Y355 F10000
  G1 X305 Y355 F10000
  G1 X265 Y355 F10000
  G1 X305 Y355 F10000
  G1 X265 Y355 F10000
  G1 Z10 F6000
#####################################################################
# Prime Nozzle
#####################################################################
[gcode_macro NOZZLE_PRIME]
description: prime the nozzle before printing
gcode:
  G92 E0
  G1 E-3 F1800
  G1 X0 Y0 F10000
  G1 Z0.3 F500
  G92 E0
  G1 E3 F500
  G92 E0
  G1 E-0.30000 F3600
  G1 Z0.2500 F1000
  G1 X350 Y0 E50 F1000 
  G92 E0
  G1 E-0.30000 F5400
  G1 Z10 F500
#####################################################################
# Pause Print
#####################################################################
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 10.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

#####################################################################
# Resonance Test (change Include at top)
#####################################################################
[gcode_macro RESONANCES_TEST]
gcode:
      SHAPER_CALIBRATE

#####################################################################
# Calibrate Probe Offset
#####################################################################

[gcode_macro Calibrate_Probe_Offset]
gcode:
      PROBE_CALIBRATE

################ DO NOT EDIT THIS BLOCK OR BELOW ###################
################ DO NOT EDIT THIS BLOCK OR BELOW ###################
################ DO NOT EDIT THIS BLOCK OR BELOW ###################
################ DO NOT EDIT THIS BLOCK OR BELOW ###################

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [stepper_z]
#*# position_endstop = 1.040
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 51.6
#*# shaper_type_y = 3hump_ei
#*# shaper_freq_y = 49.4
#*#
#*# [probe]
#*# z_offset = -0.700
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 20.923
#*# pid_ki = 0.996
#*# pid_kd = 109.843
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 40.446
#*# pid_ki = 1.266
#*# pid_kd = 323.063
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.111429, 0.108929, 0.233929, 0.058929, 0.062054, 0.088304, 0.097054, 0.142054, 0.134554
#*# 	0.106429, 0.102054, 0.053304, 0.046429, 0.059554, 0.072054, 0.063304, 0.115804, 0.114554
#*# 	0.075804, 0.069554, 0.017054, 0.009554, 0.023304, 0.346429, 0.053304, 0.076429, 0.078304
#*# 	0.041429, 0.027054, -0.016696, -0.019821, -0.005446, 0.023304, -0.007946, 0.039554, 0.046429
#*# 	0.014554, 0.000179, -0.045446, -0.051696, -0.036696, -0.022946, -0.042946, -0.001696, 0.009554
#*# 	-0.002321, -0.011071, -0.054196, -0.047321, -0.032946, -0.024196, -0.038571, 0.000804, 0.003304
#*# 	-0.004196, 0.000179, -0.042946, -0.038571, -0.014196, -0.009196, -0.017946, 0.017679, 0.023929
#*# 	0.014554, 0.020179, -0.015446, -0.014196, 0.000804, 0.005179, -0.004821, 0.022679, 0.028929
#*# 	0.057679, 0.058929, 0.026429, 0.028929, 0.045804, 0.043929, 0.020804, 0.065804, 0.065804
#*# x_count = 9
#*# y_count = 9
#*# mesh_x_pps = 4
#*# mesh_y_pps = 4
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 15.0
#*# max_x = 335.0
#*# min_y = 15.0
#*# max_y = 335.0
